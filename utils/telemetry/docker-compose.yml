version: "3"

services:
  telemetry-frontend:
    image: parity/substrate-telemetry-frontend
    container_name: telemetry-frontend
    read_only: true
    tmpfs:
      - /var/cache/nginx:uid=101,gid=101
      - /var/run:uid=101,gid=101
      - /app/tmp:uid=101,gid=101
    environment:
      SUBSTRATE_TELEMETRY_URL: ws://${DEVNET_HOST}:8000/feed
    ports:
      - 80:8000
    expose:
      - 80
    restart: unless-stopped
    networks:
      - telemetry-network

  telemetry-backend-shard:
    image: parity/substrate-telemetry-backend
    container_name: telemetry-backend-shard
    read_only: true
    command: [
      'telemetry_shard',
      '--listen', '0.0.0.0:8001',
      '--core', 'http://telemetry-backend-core:8000/shard_submit'
      ]
    ports:
      - 8001:8001
    expose:
      - 8001
    restart: unless-stopped
    networks:
      - telemetry-network

  telemetry-backend-core:
    image: parity/substrate-telemetry-backend
    container_name: telemetry-backend-core
    read_only: true
    command: [
      'telemetry_core',
      '--listen', '0.0.0.0:8000'
      ]
    ports:
      - 8000:8000
    expose:
      - 8000
    restart: unless-stopped
    networks:
      - telemetry-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - telemetry-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - telemetry-network

networks:
  telemetry-network:
    name: telemetry

volumes:
  grafana-data: