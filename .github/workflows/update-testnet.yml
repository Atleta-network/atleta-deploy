name: Update Testnet

on:
  workflow_dispatch:

jobs:

  update_technical_validators:

    runs-on: ubuntu-latest
    environment: testnet

    steps:
    - uses: actions/checkout@v4

    - name: Install system deps
      run: sudo apt-get install jq 

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh/
        touch ~/.ssh/known_hosts
        ssh-keyscan ${{ secrets.TECHNICAL_HOST }} >> ~/.ssh/known_hosts
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        eval $(ssh-agent)

    - name: Authenticate GitHub CLI and download latest release of chainspec
      run: |
        gh auth login --with-token <<< "${{ secrets.ACCESS_TOKEN }}"
        LATEST_RELEASE=$(gh release list --repo Atleta-network/atleta --json tagName,createdAt --jq '.[] | select(.tagName | startswith("testnet")) | .tagName' | sort -r | head -n 1)
        echo "${LATEST_RELEASE}"
        gh release download "${LATEST_RELEASE}" --repo Atleta-network/atleta --pattern "chain-spec.testnet.json" --dir chainspecs
      
    - name: Make Keys File
      run: |
        echo "${{ secrets.DEV_ACCOUNTS_KEYS }}" > testnet.keys.env

    - name: Generate node keys file
      run: |
        touch node-keys.env
        echo "DIEGO_NODE_KEY_PRIV=${{ secrets.DIEGO_NODE_KEY_PRIV }}" >> node-keys.env
        echo "FRANZ_NODE_KEY_PRIV=${{ secrets.FRANZ_NODE_KEY_PRIV }}" >> node-keys.env
        echo "PELE_NODE_KEY_PRIV=${{ secrets.PELE_NODE_KEY_PRIV }}" >> node-keys.env
        echo "DIEGO_NODE_KEY_PUB=${{ secrets.DIEGO_NODE_KEY_PUB }}" >> node-keys.env
        echo "FRANZ_NODE_KEY_PUB=${{ secrets.FRANZ_NODE_KEY_PUB }}" >> node-keys.env
        echo "PELE_NODE_KEY_PUB=${{ secrets.PELE_NODE_KEY_PUB }}" >> node-keys.env
        echo "RESERVED_NODES=\"${{ secrets.RESERVED_NODES }}\"" >> node-keys.env

    - name: Copy Files to Server
      run: |
        scp testnet/docker-compose.yml ${{ secrets.TECHNICAL_USER }}@${{ secrets.TECHNICAL_HOST }}:/sportchain/docker-compose.yml
        scp add-session-keys.sh ${{ secrets.TECHNICAL_USER }}@${{ secrets.TECHNICAL_HOST }}:/sportchain/add-session-keys.sh
        scp testnet/update-technical-validators.sh ${{ secrets.TECHNICAL_USER }}@${{ secrets.TECHNICAL_HOST }}:/sportchain/update.sh
        scp testnet/bootnode-entrypoint.sh ${{ secrets.TECHNICAL_USER }}@${{ secrets.TECHNICAL_HOST }}:/sportchain/bootnode-entrypoint.sh
        scp testnet.keys.env ${{ secrets.TECHNICAL_USER }}@${{ secrets.TECHNICAL_HOST }}:/sportchain/testnet.keys.env
        scp chainspecs/chain-spec.testnet.json ${{ secrets.TECHNICAL_USER }}@${{ secrets.TECHNICAL_HOST }}:/sportchain/chainspec.json
        scp utils/backup_script/run_backup.sh ${{ secrets.TECHNICAL_USER }}@${{ secrets.TECHNICAL_HOST }}:/sportchain/run_backup.sh
        scp node-keys.env ${{ secrets.TECHNICAL_USER }}@${{ secrets.TECHNICAL_HOST }}:/sportchain/node-keys.env

    - name: SSH into Server and Deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.TECHNICAL_HOST }}
        username: ${{ secrets.TECHNICAL_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /sportchain
          docker compose pull
          ./update.sh node-keys.env

  update_validators:

    needs: 
      - update_technical_validators # technical validators have private bootnode

    environment: testnet

    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:

          - node_index: 1
            host_key: VALIDATOR_1_HOST
            user_key: VALIDATOR_1_USER
            priv_key_key: VALIDATOR_1_PRIV_KEY
            priv_node_key: VALIDATOR_1_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_1_NODE_KEY_PUB

          - node_index: 2
            host_key: VALIDATOR_2_HOST
            user_key: VALIDATOR_2_USER
            priv_key_key: VALIDATOR_2_PRIV_KEY
            priv_node_key: VALIDATOR_2_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_2_NODE_KEY_PUB

          - node_index: 3
            host_key: VALIDATOR_3_HOST
            user_key: VALIDATOR_3_USER
            priv_key_key: VALIDATOR_3_PRIV_KEY
            priv_node_key: VALIDATOR_3_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_3_NODE_KEY_PUB

          - node_index: 5
            host_key: VALIDATOR_5_HOST
            user_key: VALIDATOR_5_USER
            priv_key_key: VALIDATOR_5_PRIV_KEY
            priv_node_key: VALIDATOR_5_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_5_NODE_KEY_PUB

          - node_index: 6
            host_key: VALIDATOR_6_HOST
            user_key: VALIDATOR_6_USER
            priv_key_key: VALIDATOR_6_PRIV_KEY
            priv_node_key: VALIDATOR_6_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_6_NODE_KEY_PUB

          - node_index: 7
            host_key: VALIDATOR_7_HOST
            user_key: VALIDATOR_7_USER
            priv_key_key: VALIDATOR_7_PRIV_KEY
            priv_node_key: VALIDATOR_7_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_7_NODE_KEY_PUB

          - node_index: 8
            host_key: VALIDATOR_8_HOST
            user_key: VALIDATOR_8_USER
            priv_key_key: VALIDATOR_8_PRIV_KEY
            priv_node_key: VALIDATOR_8_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_8_NODE_KEY_PUB

          - node_index: 9
            host_key: VALIDATOR_9_HOST
            user_key: VALIDATOR_9_USER
            priv_key_key: VALIDATOR_9_PRIV_KEY
            priv_node_key: VALIDATOR_9_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_9_NODE_KEY_PUB

          - node_index: 10
            host_key: VALIDATOR_10_HOST
            user_key: VALIDATOR_10_USER
            priv_key_key: VALIDATOR_10_PRIV_KEY
            priv_node_key: VALIDATOR_10_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_10_NODE_KEY_PUB

          - node_index: 11
            host_key: VALIDATOR_11_HOST
            user_key: VALIDATOR_11_USER
            priv_key_key: VALIDATOR_11_PRIV_KEY
            priv_node_key: VALIDATOR_11_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_11_NODE_KEY_PUB

          - node_index: 14
            host_key: VALIDATOR_14_HOST
            user_key: VALIDATOR_14_USER
            priv_key_key: VALIDATOR_14_PRIV_KEY
            priv_node_key: VALIDATOR_14_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_14_NODE_KEY_PUB

          - node_index: 15
            host_key: VALIDATOR_15_HOST
            user_key: VALIDATOR_15_USER
            priv_key_key: VALIDATOR_15_PRIV_KEY
            priv_node_key: VALIDATOR_15_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_15_NODE_KEY_PUB

          - node_index: 16
            host_key: VALIDATOR_16_HOST
            user_key: VALIDATOR_16_USER
            priv_key_key: VALIDATOR_16_PRIV_KEY
            priv_node_key: VALIDATOR_16_NODE_KEY_PRIV
            pub_node_key: VALIDATOR_16_NODE_KEY_PUB

      max-parallel: 1

    steps:
    - uses: actions/checkout@v4

    - name: Install system deps
      run: sudo apt-get install jq gettext

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh/
        touch ~/.ssh/known_hosts
        ssh-keyscan ${{ secrets[matrix.host_key] }} >> ~/.ssh/known_hosts
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        eval $(ssh-agent)
        ssh-add ~/.ssh/id_rsa

    - name: Authenticate GitHub CLI and download latest release of chainspec
      run: |
        gh auth login --with-token <<< "${{ secrets.ACCESS_TOKEN }}"
        LATEST_RELEASE=$(gh release list --repo Atleta-network/atleta --json tagName,createdAt --jq '.[] | select(.tagName | startswith("testnet")) | .tagName' | sort -r | head -n 1)
        echo "${LATEST_RELEASE}"
        gh release download "${LATEST_RELEASE}" --repo Atleta-network/atleta --pattern "chain-spec.testnet.json" --dir chainspecs

    - name: Generate config.env
      run: |
        mkdir -p deploy
        touch config.env
        echo "PRIVATE_KEY=${{ secrets[matrix.priv_key_key] }}" >> config.env
        echo "DOCKER_IMAGE=atletanetwork/atleta-node:testnet-latest" >> config.env
        echo "BOOTNODE_ADDRESS=${{ secrets.BOOTNODE_P2P_ADDRESS }}" >> config.env
        echo "PRIVATE_NODE_KEY=${{ secrets[matrix.priv_node_key] }}" >> config.env
        echo "PUBLIC_NODE_KEY=${{ secrets[matrix.pub_node_key] }}" >> config.env
        echo "INDEX=${{ matrix.node_index }}" >> config.env
        echo "TELEMETRY_HOST=${{ secrets.TELEMETRY_HOST }}" >> config.env

    - name: Substitute environment variables
      env:
        LOKI_HOST: ${{ secrets.LOKI_HOST }}
      run: |
        envsubst < utils/telemetry/promtail/promtail-config.yml > utils/telemetry/promtail/promtail-config.fill.yml      

    - name: Copy files to the server
      run: |
        scp testnet/update-validator.sh ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }}:/home/${{ secrets[matrix.user_key] }}/atleta/update.sh
        scp testnet/set_session_keys.js ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }}:/home/${{ secrets[matrix.user_key] }}/atleta/set_session_keys.js
        scp testnet/validate.js ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }}:/home/${{ secrets[matrix.user_key] }}/atleta/validate.js
        scp testnet/validate.sh ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }}:/home/${{ secrets[matrix.user_key] }}/atleta/validate.sh
        scp testnet/revert.sh ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }}:/home/${{ secrets[matrix.user_key] }}/atleta/revert.sh
        scp testnet/package.json ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }}:/home/${{ secrets[matrix.user_key] }}/atleta/package.json
        scp testnet/package-lock.json ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }}:/home/${{ secrets[matrix.user_key] }}/atleta/package-lock.json
        scp config.env ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }}:/home/${{ secrets[matrix.user_key] }}/atleta/config.env
        scp chainspecs/chain-spec.testnet.json ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }}:/home/${{ secrets[matrix.user_key] }}/atleta/chainspec.json
        ssh -o StrictHostKeyChecking=no ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }} "mkdir -p /home/${{ secrets[matrix.user_key] }}/atleta/promtail"
        scp utils/telemetry/promtail/promtail-config.fill.yml ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }}:/home/${{ secrets[matrix.user_key] }}/atleta/promtail/promtail-config.fill.yml
        ssh -o StrictHostKeyChecking=no ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }} "mkdir -p /home/${{ secrets[matrix.user_key] }}/atleta/process-exporter"
        scp utils/telemetry/process-exporter/process-exporter.yml ${{ secrets[matrix.user_key] }}@${{ secrets[matrix.host_key] }}:/home/${{ secrets[matrix.user_key] }}/atleta/process-exporter/process-exporter.yml
        

    - name: Run the validator
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets[matrix.host_key] }}
        username: ${{ secrets[matrix.user_key] }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/${{ secrets[matrix.user_key] }}/atleta
          ./update.sh
